#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    tb0_mmv_ibl {
        compatible = "zmk,input-behavior-listener";
        device = <&trackball>;
        layers = <0 1 5>;

        /* NOTE: only apply input-code overriding for INPUT_EV_REL */

        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_X>;
        y-input-code = <INPUT_REL_Y>;
        scale-multiplier = <1>;
        scale-divisor = <1>;

        /* bind a behavior to auto activate MSK layer for &mkp */

        bindings = <&ib_tog_layer 1>;

        /* align to CCW 45 degree */
        // rotate-deg = <315>;
        /* NOTE 1: This settings do not compitable with y-invert and x-invert */
        /* NOTE 2: Floating point computation requires alot of ram. */
        /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
    };

    /* input config for mouse scroll mode on momentary mouse scoll layer (MSC) */

    tb0_msl_ibl {
        compatible = "zmk,input-behavior-listener";
        device = <&trackball>;
        layers = <2>;
        evt-type = <INPUT_EV_REL>;

        /* slienting x-axis with alt event code */

        x-input-code = <INPUT_REL_MISC>;
        y-input-code = <INPUT_REL_WHEEL>;

        /* invent scrolling direction */

        y-invert;

        /* align to CCW 45 degree */
        // rotate-deg = <315>;
        /* NOTE 1: This settings do not compitable with y-invert and x-invert */
        /* NOTE 2: Floating point computation requires alot of ram. */
        /*         This feature will cuase stackove flow with CONFIG_ZMK_USB_LOGGING=y */
        /* bind a behavior to down scaling input value to (1/8) */
        /* NOTE: This behavior is different to scale-divisor. */
        /*       The delta value is accumlated until result >= 1 after cast. */
        /*       The scrolling is preented in hi-res and allow precise scrolling */

        bindings = <&ib_wheel_scaler 1 64>;
    };

    /* adjust cooldown waiting period for mouse key layer (MSK) after activated */

    ib_tog_layer: ib_tog_layer {
        compatible = "zmk,input-behavior-tog-layer";
        #binding-cells = <1>;
        time-to-live-ms = <1500>;
    };

    /* define a resolution down scaler only for INPUT_REL_WHEEL */

    ib_wheel_scaler: ib_wheel_scaler {
        compatible = "zmk,input-behavior-scaler";
        #binding-cells = <2>;
        evt-type = <INPUT_EV_REL>;
        input-code = <INPUT_REL_WHEEL>;
    };
};

// / {
//     chosen {
//         zmk,physical-layout = &matrix_physical_layout;
//     };
// };
/ {

	keymap {
		compatible = "zmk,keymap";

		default_layer {
			bindings = <
				&kp Q    &kp W    &kp E     &kp R     &kp T                         &kp Y     &kp U     &kp I     &kp O      &kp P 
				&kp A    &kp S    &kp D     &kp F     &kp G                         &kp H     &kp J     &kp K     &kp L      &kp SEMI
				&kp Z    &kp X    &kp C     &kp V     &kp B                         &kp N     &kp M     &kp COMMA &kp PERIOD &kp SLASH
				&kp A    &kp A    &kp RALT  &kp LGUI  &kp DEL  &kp RET    &kp TAB   &kp BSPC                                 &kp RALT
			>;
		};
	};
};
